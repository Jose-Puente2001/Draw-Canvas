{"version":3,"sources":["component/Navbar.js","style/global-style.js","component/Canvas.js","component/Home.js","App.js","index.js"],"names":["NavStyled","styled","nav","UlStyled","ul","Navbar","to","GlobalStyle","createGlobalStyle","Container","div","Canvas","firscanvas","useRef","secondcanvas","useState","color","setColor","useEffect","window","setInterval","Math","floor","random","toString","onClick","current","clear","data","getSaveData","loadSaveData","undo","ref","brushColor","brushRadius","style","border","Title","h1","Content","Home","src","App","exact","path","component","container","document","getElementById","ReactDOM","render"],"mappings":"8MAKMA,EAAYC,IAAOC,IAAV,kDAKTC,EAAWF,IAAOG,GAAV,0JA0BCC,I,IAAAA,EAbf,WAEE,OAEE,cAACL,EAAD,UACE,eAACG,EAAD,WACE,6BAAI,cAAC,IAAD,CAAMG,GAAG,IAAT,oBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,UAAT,4B,gBCZGC,EAhBKC,YAAH,oMCIXC,EAAYR,IAAOS,IAAV,mPA+EAC,I,IAAAA,EAzDf,WAEE,IAAMC,EAAaC,iBAAO,MACpBC,EAAeD,iBAAO,MAHZ,EAIUE,mBAAS,WAJnB,mBAITC,EAJS,KAIFC,EAJE,KA8BhB,OAxBAC,qBAAU,WACRC,OAAOC,aAAY,WAEjBH,EAAS,IAAMI,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBC,SAAS,OAE5D,QAoBH,qCAEE,cAAC,EAAD,IACA,eAACf,EAAD,WACE,wBAAQgB,QAfA,WAEZb,EAAWc,QAAQC,SAaf,mBACA,wBAAQF,QArBG,WACf,IAAMG,EAAOhB,EAAWc,QAAQG,cAChCf,EAAaY,QAAQI,aAAaF,IAmB9B,sBACA,wBAAQH,QAZD,WAEXb,EAAWc,QAAQK,QAUf,qBAEF,eAACtB,EAAD,WACE,cAAC,IAAD,CACEuB,IAAKpB,EACLqB,WAAYjB,EACZkB,YAAa,GACbC,MAAO,CAAEC,OAAQ,qBAGnB,cAAC,IAAD,CACEJ,IAAKlB,EACLqB,MAAO,CAAEC,OAAQ,4BCxErBC,EAAQpC,IAAOqC,GAAV,iIAYLC,EAAUtC,IAAOS,IAAV,2LAqCE8B,MAff,WAGE,OAEE,gCACE,cAAC,EAAD,IACA,cAACH,EAAD,qDACA,cAACE,EAAD,UACE,qBAAKE,IAAI,kCC7BFC,MAZf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWL,IACjC,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,UAAUC,UAAWlC,WCTzCmC,EAAaC,SAASC,eAAe,QAE3CC,IAASC,OAAO,cAAC,EAAD,IAASJ,K","file":"static/js/main.3d041d95.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst NavStyled = styled.nav`\r\n\r\n  padding: 20px;\r\n\r\n`\r\nconst UlStyled = styled.ul`\r\n  \r\n  list-style-type: none;\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n\r\n  a{\r\n     text-decoration: none;\r\n  }\r\n\r\n`\r\n\r\n\r\nfunction Navbar() {\r\n\r\n  return (\r\n\r\n    <NavStyled>\r\n      <UlStyled>\r\n        <li><Link to=\"/\" >Home</Link></li>\r\n        <li><Link to=\"/canvas\" >Canvas</Link></li>\r\n      </UlStyled>\r\n    </NavStyled>\r\n  )\r\n}\r\n\r\nexport default Navbar;","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\nbody{\r\n\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tbackground: rgba(183,222,237,1); \r\n\tfont-family: \"Rubik\", sans-serif;\r\n\tfont-weight: bold;\r\n\toverflow-x: hidden;\r\n\r\n}\r\n\r\n\r\n`\r\n\r\nexport default GlobalStyle","import React, { useRef, useState, useEffect } from 'react';\r\nimport CanvasDraw from \"react-canvas-draw\";\r\nimport GlobalStyle from '../style/global-style';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Container = styled.div`\r\n\r\ndisplay: flex;\r\njustify-content: center;\r\nmargin-top: 20px;\r\n\r\n\r\n@media screen and (max-width: 768px){\r\n  \r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  button{\r\n     \r\n     width: 200px;\r\n  }\r\n\r\n}\r\n\r\n\r\n`\r\n\r\nfunction Canvas() {\r\n\r\n  const firscanvas = useRef(null);\r\n  const secondcanvas = useRef(null);\r\n  const [color, setColor] = useState(\"#ffc600\");\r\n\r\n  useEffect(() => {\r\n    window.setInterval(() => {\r\n\r\n      setColor('#' + Math.floor(Math.random() * 16777215).toString(16));\r\n\r\n    }, 3000)\r\n\r\n  });\r\n\r\n  const SaveDate = () => {\r\n    const data = firscanvas.current.getSaveData();\r\n    secondcanvas.current.loadSaveData(data);\r\n  }\r\n\r\n  const Clear = () => {\r\n\r\n    firscanvas.current.clear();\r\n  }\r\n\r\n  const Undo = () => {\r\n\r\n    firscanvas.current.undo();\r\n  }\r\n\r\n  return (\r\n    <>\r\n\r\n      <GlobalStyle />\r\n      <Container>\r\n        <button onClick={Clear}>Clear</button>\r\n        <button onClick={SaveDate}>SaveDate</button>\r\n        <button onClick={Undo}>Undo</button>\r\n      </Container>\r\n      <Container>\r\n        <CanvasDraw\r\n          ref={firscanvas}\r\n          brushColor={color}\r\n          brushRadius={12}\r\n          style={{ border: '1px solid black' }}\r\n        />\r\n\r\n        <CanvasDraw\r\n          ref={secondcanvas}\r\n          style={{ border: '1px solid black' }}\r\n        />\r\n      </Container>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default Canvas;","import React from 'react';\r\nimport GlobalStyle from '../style/global-style';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Title = styled.h1`\r\n\r\ntext-align: center;\r\n\r\n@media screen and (max-width: 500px){\r\n  \r\n   margin-top: 15%;\r\n   \r\n}\r\n\r\n\r\n`\r\nconst Content = styled.div`\r\n\r\ndisplay: grid;\r\njustify-items: center;\r\n\r\nimg{\r\n\r\n\twidth: 75%;\r\n}\r\n\r\n@media screen and (max-width: 768px){\r\n  \r\n  img{\r\n\r\n  \theight: 600px;\r\n  }\r\n}\r\n\r\n\r\n\r\n`\r\n\r\nfunction Home() {\r\n\r\n\r\n  return (\r\n\r\n    <div>\r\n      <GlobalStyle />\r\n      <Title>Draw-Canvas: One design for everything</Title>\r\n      <Content>\r\n        <img src=\"./img/moster_artist.svg\"/>\r\n      </Content>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from \"./component/Navbar\";\nimport Canvas from \"./component/Canvas\";\nimport Home from \"./component/Home\";\n\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/canvas\" component={Canvas} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App  from './App';\n\nconst container =  document.getElementById('root')\n\nReactDOM.render(<App />, container);\n\n\n"],"sourceRoot":""}